/**
 * Core data types used throughout the application.
 *
 * This file defines the primary data structures that represent:
 * - Launch data (individual rocket launches)
 * - Provider data (launch provider organizations)
 * - Rocket data (rocket vehicle specifications)
 * - Era data (historical periods in space exploration)
 *
 * @module types
 */

/**
 * Enum representing possible launch statuses.
 */
export enum LaunchStatus {
  /** Launch completed successfully */
  Successful = "Launch Successful",
  /** Launch failed to achieve mission objectives */
  Failure = "Launch Failure",
  /** Launch achieved some but not all mission objectives */
  PartialFailure = "Launch was a Partial Failure",
}

/**
 * Determines if a launch status is counted as successful.
 *
 * @param status - Launch status to check
 * @returns True if the launch is successful
 */
export function isSuccessfulLaunchStatus(
  status: LaunchStatus | string
): boolean {
  return status === LaunchStatus.Successful;
}

/**
 * Represents a single rocket launch event.
 *
 * @interface Launch
 */
export interface Launch {
  /** Name of the launch mission */
  Name: string;
  /** Status of the launch */
  Status: string | LaunchStatus;
  /** Name of the organization that conducted the launch */
  Provider: string;
  /** Name of the rocket used for the launch */
  Rocket: string;
  /** Description of the launch mission */
  Mission: string;
  /** Launch site name/location */
  LaunchPad: string;
  /** Latitude coordinate of the launch site */
  lat: number;
  /** Longitude coordinate of the launch site */
  lon: number;
  /** ISO-formatted date string of the launch time */
  datetime_iso: string;
  /** Optional normalized timestamp for timeline calculations */
  timestamp_days?: number;
  /** Year of the launch */
  year: number;
}

/**
 * Represents a launch provider organization.
 *
 * @interface Provider
 */
export interface Provider {
  /** Unique identifier for the provider (usually kebab-case name) */
  id: string;
  /** Display name of the provider */
  name: string;
  /** Country or countries of origin */
  country?: string;
  /** Year the organization was founded */
  foundingYear?: number;
  /** Total number of launches conducted by this provider */
  launchCount?: number;
  /** Title of the description */
  descriptionTitle: string;
  /** Description of the era's historical significance */
  description: string;
  /** Question to head on to the provider section */
  question: string;
}

/**
 * Represents a rocket vehicle type.
 *
 * @interface Rocket
 */
export interface Rocket {
  /** Unique identifier for the rocket (usually kebab-case name) */
  id: string;
  /** Display name of the rocket */
  name: string;
  /** ID of the provider that created/operates this rocket */
  providerId: string;
  /** Optional URL to rocket image */
  imageUrl?: string;
  /** Description of the rocket's history and capabilities */
  description?: string;
  /** Technical specifications of the rocket */
  specs?: {
    /** Height of the rocket */
    height?: string;
    /** Thrust force generated by the rocket engines */
    thrust?: string;
    /** Total weight of the rocket */
    weight?: string;
    /** Diameter of the rocket */
    diameter?: string;
    /** Payload capacity of the rocket */
    payloadCapacity?: string;
    /** Additional custom specifications */
    [key: string]: string | undefined;
  };
  stats?: {
    totalLaunches?: string;
    successRate?: string;
    firstLaunch?: string;
    [key: string]: string | undefined;
  };
  /** Optional URL to 3D model for advanced visualization */
  modelUrl?: string;
}

/**
 * Represents a historical era in space exploration.
 *
 * @interface Era
 */
export interface Era {
  /** Unique identifier for the era (usually kebab-case name) */
  id: string;
  /** Display name of the era */
  name: string;
  /** Starting year of the era */
  startDate: string;
  /** Ending year of the era */
  endDate: string;
  /** Title of the description */
  descriptionTitle: string;
  /** Description of the era's historical significance */
  description: string;
  /** Question to head on to the provider section */
  question: string;
}
